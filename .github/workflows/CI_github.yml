name: meta-mono CI

on:
  push:
    branches:
      - master
      - master-next
  pull_request:
    branches:
      - master
#  release:
#    types: published

jobs:
  meta-mono-build:
    runs-on: [self-hosted, linux]
    environment: 
      name: build
    steps:
    - name: Set environment for branch
      run: |
        if [[ $GITHUB_REF == 'refs/heads/master' ]]; then
          echo "BUILD_TYPE=master" >> "$GITHUB_ENV"
        fi
        if [[ $GITHUB_REF == 'refs/heads/hardknott' ]]; then
          echo "BUILD_TYPE=hardknott" >> "$GITHUB_ENV"
        fi
    - name: Checkout meta-mono
      uses: actions/checkout@v1
    - name: Relocate meta-mono
      run: |
        mkdir ../meta-mono.new
        mkdir ../meta-mono.new/meta-mono
        mv * ../meta-mono.new/meta-mono
        cd ..
        rm -Rf meta-mono
        mv meta-mono.new meta-mono
    - name: Build
      run: |
         . ./poky/oe-init-build-env 
        if [[ ! $(grep meta-mono/meta-mono/meta-mono conf/bblayers.conf) ]]; then
          echo "BBLAYERS += '$WORKSPACE/meta-mono'" >> conf/bblayers.conf
        fi
        if [[ ! $(grep meta-openembedded conf/bblayers.conf) ]]; then
          echo "BBLAYERS += '$WORKSPACE/meta-openembedded/meta-oe'" >> conf/bblayers.conf
        fi
        if [[ ! $(grep rm_work conf/local.conf) ]]; then
          echo "INHERIT += ' rm_work '" >> conf/local.conf
        fi
        if [[ ! $(grep testimage conf/local.conf) ]]; then
          echo "INHERIT += ' testimage '" >> conf/local.conf
        fi

        export BB_ENV_EXTRAWHITE='$BB_ENV_EXTRAWHITE PREFERRED_VERSION_mono PREFERRED_VERSION_mono-native'
        export BB_ENV_EXTRAWHITE='$BB_ENV_EXTRAWHITE MACHINE DL_DIR'

        export VERSION=6.12.0.154
        export MACHINE=x86
        env PREFERRED_VERSION_mono="${VERSION}" PREFERRED_VERSION_mono-native="${VERSION}" MACHINE="qemu${ARCH}" DL_DIR="$WORKSPACE/downloads" bitbake test-image-mono 
#    - name: Store artifacts
#      uses: actions/upload-artifact@v2
#      with:
#        name: firmware-${{ github.sha }}
#        path: ./build_output/firmware
