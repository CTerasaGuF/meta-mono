name: meta-mono CI

on:
  push:
    branches:
      - master
      - master-next
  pull_request:
    branches:
      - master
#  release:
#    types: published

jobs:
  meta-mono-build:
    runs-on: [self-hosted, linux]
    environment: 
      name: build
    steps:
    - name: Set environment for branch
      run: |
        if [[ $GITHUB_REF == 'refs/heads/master' ]]; then
          echo "BUILD_TYPE=master" >> "$GITHUB_ENV"
        fi
        if [[ $GITHUB_REF == 'refs/heads/hardknott' ]]; then
          echo "BUILD_TYPE=hardknott" >> "$GITHUB_ENV"
        fi
    - name: Checkout meta-mono
      uses: actions/checkout@v1
    - name: Update repo poky
      run: |
        if [ ! -d 'poky' ]; then
          git clone git://git.yoctoproject.org/poky -b $GITHUB_REF_NAME
        else
          cd poky
          git pull origin $GITHUB_REF_NAME
          cd ..
        fi 
    - name: Update repo meta-openembedded
      run: |
        if [ ! -d 'meta-openembedded' ]; then
          git clone https://github.com/openembedded/meta-openembedded.git -b $GITHUB_REF_NAME
        else
          cd meta-openembedded
          git pull origin $GITHUB_REF_NAME
          cd ..
        fi
    - name: Configure bitbake
      run: |
        cd poky
         . ./oe-init-build-env 
    - name: Setup configuration
        if [ ! grep -q meta-mono conf/bblayers.conf ]; then
          echo "BBLAYERS += '$WORKSPACE/meta-mono'" >> conf/bblayers.conf
        fi
        if [ ! grep -q meta-openembedded conf/bblayers.conf]; then
          echo "BBLAYERS += '$WORKSPACE/meta-openembedded/meta-oe'" >> conf/bblayers.conf
        fi
        if [ ! grep -q rm_work conf/local.conf ]; then
          echo "INHERIT += ' rm_work '" >> conf/local.conf
        fi
        if [ ! grep -q testimage conf/local.conf]; then
          echo "INHERIT += ' testimage ' >> conf/local.conf
        fi

        export BB_ENV_EXTRAWHITE="$BB_ENV_EXTRAWHITE PREFERRED_VERSION_mono PREFERRED_VERSION_mono-native"
        export BB_ENV_EXTRAWHITE="$BB_ENV_EXTRAWHITE MACHINE DL_DIR"
#    - name: Store artifacts
#      uses: actions/upload-artifact@v2
#      with:
#        name: firmware-${{ github.sha }}
#        path: ./build_output/firmware
